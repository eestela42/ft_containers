map();
explicit map( const Compare& comp,
              const Allocator& alloc = Allocator() );
template< class InputIt >
map( InputIt first, InputIt last,
     const Compare& comp = Compare(),
     const Allocator& alloc = Allocator() );
map( const map& other );
~map();
map& operator=( const map& other );
allocator_type get_allocator() const;

T& at( const Key& key );
const T& at( const Key& key ) const;
T& operator[]( const Key& key );

iterator begin();
const_iterator begin() const;
iterator end();
const_iterator end() const;
reverse_iterator rbegin();
const_reverse_iterator rbegin() const;

bool empty() const;
size_type size() const;
size_type max_size() const;

void clear();
std::pair<iterator, bool> insert( const value_type& value );
iterator insert( iterator pos, const value_type& value );
iterator erase( iterator pos );
size_type erase( const Key& key );
iterator erase( iterator first, iterator last );
void swap( map& other );

size_type count( const Key& key ) const;
iterator find( const Key& key );
const_iterator find( const Key& key ) const;
std::pair<iterator,iterator> equal_range( const Key& key );
std::pair<const_iterator,const_iterator> equal_range( const Key& key ) const;
iterator lower_bound( const Key& key );
const_iterator lower_bound( const Key& key ) const;
iterator upper_bound( const Key& key );
const_iterator upper_bound( const Key& key ) const;

key_compare key_comp() const;
std::map::value_compare value_comp() const;


template< class Key, class T, class Compare, class Alloc >
bool operator==( const std::map<Key,T,Compare,Alloc>& lhs,
                 const std::map<Key,T,Compare,Alloc>& rhs );
template< class Key, class T, class Compare, class Alloc >
bool operator!=( const std::map<Key,T,Compare,Alloc>& lhs,
                 const std::map<Key,T,Compare,Alloc>& rhs );
template< class Key, class T, class Compare, class Alloc >
bool operator<( const std::map<Key,T,Compare,Alloc>& lhs,
                const std::map<Key,T,Compare,Alloc>& rhs );
template< class Key, class T, class Compare, class Alloc >
bool operator<=( const std::map<Key,T,Compare,Alloc>& lhs,
                 const std::map<Key,T,Compare,Alloc>& rhs );
template< class Key, class T, class Compare, class Alloc >
bool operator>( const std::map<Key,T,Compare,Alloc>& lhs,
                const std::map<Key,T,Compare,Alloc>& rhs );
template< class Key, class T, class Compare, class Alloc >
bool operator>=( const std::map<Key,T,Compare,Alloc>& lhs,
                 const std::map<Key,T,Compare,Alloc>& rhs );

